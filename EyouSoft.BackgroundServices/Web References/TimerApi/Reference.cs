//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5472
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5472 版自动生成。
// 
#pragma warning disable 1591

namespace EyouSoft.BackgroundServices.TimerApi {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TimerApiSoap", Namespace="http://tempuri.org/")]
    public partial class TimerApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ApiSoapHeader apiSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback HandlerDingDansOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TimerApi() {
            this.Url = global::EyouSoft.BackgroundServices.Properties.Settings.Default.EyouSoft_BackgroundServices_TimerApi_TimerApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ApiSoapHeader ApiSoapHeaderValue {
            get {
                return this.apiSoapHeaderValueField;
            }
            set {
                this.apiSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HandlerDingDansCompletedEventHandler HandlerDingDansCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ApiSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HandlerDingDans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HandlerDingDans(MTimerDingDanInfo[] items) {
            this.Invoke("HandlerDingDans", new object[] {
                        items});
        }
        
        /// <remarks/>
        public void HandlerDingDansAsync(MTimerDingDanInfo[] items) {
            this.HandlerDingDansAsync(items, null);
        }
        
        /// <remarks/>
        public void HandlerDingDansAsync(MTimerDingDanInfo[] items, object userState) {
            if ((this.HandlerDingDansOperationCompleted == null)) {
                this.HandlerDingDansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHandlerDingDansOperationCompleted);
            }
            this.InvokeAsync("HandlerDingDans", new object[] {
                        items}, this.HandlerDingDansOperationCompleted, userState);
        }
        
        private void OnHandlerDingDansOperationCompleted(object arg) {
            if ((this.HandlerDingDansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HandlerDingDansCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5473")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class ApiSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string secretKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string SecretKey {
            get {
                return this.secretKeyField;
            }
            set {
                this.secretKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5473")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MTimerDingDanInfo {
        
        private int dingDanLeiXingField;
        
        private string dingDanIdField;
        
        /// <remarks/>
        public int DingDanLeiXing {
            get {
                return this.dingDanLeiXingField;
            }
            set {
                this.dingDanLeiXingField = value;
            }
        }
        
        /// <remarks/>
        public string DingDanId {
            get {
                return this.dingDanIdField;
            }
            set {
                this.dingDanIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void HandlerDingDansCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591